/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package electricity.billing.system;

import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class Deposit extends javax.swing.JFrame {

    /**
     * Creates new form Deposit
     */
    public Deposit() {
         setLocation(400,100);
        initComponents();
        Connectivity c = new Connectivity();
          try {
          ResultSet rs =c.s.executeQuery("select * from customer");
          while (rs.next()){
           cmeterno.addItem(rs.getString("meter_no"));       
           
          }
        } catch (SQLException e) {
            System.err.println("Error fetching meter numbers: " + e.getMessage());
            e.printStackTrace();
        }
          try {
       
        String query = "SELECT * FROM bill";
        ResultSet rs = c.s.executeQuery(query);
        
        // Get table model to update the table
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);  // Clear any previous rows

        // Loop through the result set and add data to the table
        while (rs.next()) {
            String meterNo = rs.getString("meter_no");
            String customerName = rs.getString("month");
            String address = rs.getString("units");
             String tb = rs.getString("totalbill");
              String st = rs.getString("status");
            // Add data to table
            model.addRow(new Object[]{meterNo, customerName, address,tb,st});
        }
    } catch (SQLException e) {
        System.err.println("Error fetching data: " + e.getMessage());
        e.printStackTrace();
    }
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblmeterno = new javax.swing.JLabel();
        cmeterno = new javax.swing.JComboBox<>();
        lblmonth = new javax.swing.JLabel();
        cmonth = new javax.swing.JComboBox<>();
        js = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        btnsearch = new javax.swing.JButton();
        btnp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblmeterno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblmeterno.setText("Search by meter number");

        cmeterno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { }));
        cmeterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmeternoActionPerformed(evt);
            }
        });

        lblmonth.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblmonth.setText("Search by Month");

        cmonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "january", "febuary", "March", "April", "May", "June", "july", "August","September","Octomber","November","December" }));
        cmonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmonthActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Modern No. 20", 1, 14)); // NOI18N
        table.setModel(new DefaultTableModel(
            new Object[][] {},
            new String[] { "Meter No","month", "units", "total Bill","Status" }
        ));
        table.setEnabled(false);
        js.setViewportView(table);

        btnsearch.setBackground(new java.awt.Color(204, 204, 255));
        btnsearch.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnsearch.setText("Search");
        btnsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsearchActionPerformed(evt);
            }
        });

        btnp.setBackground(new java.awt.Color(204, 204, 255));
        btnp.setFont(new java.awt.Font("Monospaced", 1, 18)); // NOI18N
        btnp.setText("Print");
        btnp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnpActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(js, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(51, 51, 51)
                        .addComponent(btnp, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(lblmeterno, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cmeterno, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblmonth)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmeterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmonth, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmeterno, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(js, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmeternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmeternoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmeternoActionPerformed

    private void cmonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmonthActionPerformed

    private void btnsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsearchActionPerformed
        // TODO add your handling code here:
        String query ="select * from bill where meter_no='"+cmeterno.getSelectedItem()+"' and month ='"+cmonth.getSelectedItem()+"'";
           // TODO add your handling code here:
            System.out.println("Executing query: " + query);
        try{
              Connectivity c = new Connectivity();
              ResultSet rs = c.s.executeQuery(query);
               DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);  // Clear any previous rows from the table

        // Check if there is any data to display
        if (!rs.next()) {
            System.out.println("No data found for the query.");  // If no rows are returned, print this
            JOptionPane.showMessageDialog(this, "No data found for the selected meter number and month.");
            return;  // Exit if no data is found
        }

        // Reset the ResultSet cursor to the first row
        rs.beforeFirst();

        // Loop through the result set and add data to the table
        while (rs.next()) {
            // Retrieve the data from the result set
            String meterNo = rs.getString("meter_no");
            String customerName = rs.getString("month");
            String units = rs.getString("units");
            String totalBill = rs.getString("totalbill");
            String status = rs.getString("status");

            // Print the retrieved data to debug
            System.out.println("Meter No: " + meterNo + ", Month: " + customerName + ", Units: " + units + ", Total Bill: " + totalBill + ", Status: " + status);

            // Add the retrieved data to the table
            model.addRow(new Object[]{meterNo, customerName, units, totalBill, status});
        }

        // Close the ResultSet
        rs.close();
           }
                
        catch(Exception e){
        e.printStackTrace();
        }
    }//GEN-LAST:event_btnsearchActionPerformed

    private void btnpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnpActionPerformed
        // TODO add your handling code here:
        try{
        table.print();
        }
        catch(Exception e){
        e.printStackTrace();
        }
    }//GEN-LAST:event_btnpActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Deposit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Deposit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnp;
    private javax.swing.JButton btnsearch;
    private javax.swing.JComboBox<String> cmeterno;
    private javax.swing.JComboBox<String> cmonth;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane js;
    private javax.swing.JLabel lblmeterno;
    private javax.swing.JLabel lblmonth;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
